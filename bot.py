from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.utils.deep_linking import decode_payload
from aiogram.types import Message
from aiogram.dispatcher import FSMContext
from aiogram.utils import executor
import keybords as kb
import os

TOKEN = os.getenv('TOKEN')
bot = Bot(token=TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())


NOTIFICATION = 1


async def save_id(user_id):
    f = open('users.txt', 'a')
    f.write(str(user_id) + '\n')
    f.close()


@dp.message_handler(commands=['start'], state='*')
async def process_start_command(message: types.Message, state: FSMContext):
    await message.answer("–ù–∞–ø–∏—à–∏ —Ç—É—Ç –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É —á–µ–ª–æ–≤–µ–∫—É, –∫–æ—Ç–æ—Ä—ã–π –æ–ø—É–±–ª–∏–∫–æ–≤–∞–ª —Å—Å—ã–ª–∫—É. "
                         "–Ø –æ—Ç–ø—Ä–∞–≤–ª—é –µ–µ –∞–Ω–æ–Ω–∏–º–Ω–æ. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—É—á—á–∞—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏ –Ω–∞–∂–º–∏ \"–•–æ—á—É –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏\"",
                         reply_markup=kb.main_kb)
    # if NOTIFICATION:  # –≠—Ç–æ –º–Ω–µ –ø—Ä–æ—Å—Ç–æ —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞—Å–∫–æ–ª—å–∫–æ –Ω–∞—Ä–æ–¥ –ø–æ–ª—å–∑—É–µ—Ç—Å—è –±–æ—Ç–æ–º
    #     await bot.send_message(1821744447, '+1 user')
    await state.set_state('waiting text')
    await state.update_data(stacy_id=message.get_args())
    if NOTIFICATION:  # –≠—Ç–æ –º–Ω–µ –ø—Ä–æ—Å—Ç–æ —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞—Å–∫–æ–ª—å–∫–æ –Ω–∞—Ä–æ–¥ –ø–æ–ª—å–∑—É–µ—Ç—Å—è –±–æ—Ç–æ–º
        await bot.send_message(1821744447, '@' + message.from_user.username
                               + ' ' + str(message.from_user.id))
    await save_id(message.from_user.id)


@dp.message_handler(state='*', text=['–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Çüí≥'])
async def process_donate(message: types.Message):
    await message.answer("üçÄüçÄüçÄ\n"
                         "–ü—Ä–∏—è—Ç–Ω–æ —á—Ç–æ —Ç—ã–∫–Ω—É–ª–∏. –í–æ—Ç –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã."
                         ": \n2200 2404 6271 3468\n"
                         "–ö—Å—Ç–∞—Ç–∏, –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –∏ –æ—Ç–∑—ã–≤–∞–º –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å —Å—é–¥–∞ @bryansk_sever111",
                         reply_markup=kb.main_kb)


@dp.message_handler(text=['–•–æ—á—É –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É‚ù§Ô∏è'], state='*')
async def process_start_command(message: types.Message, state: FSMContext):
    link = 't.me/sweetfunnyvalentine_bot?start=' + str(message.from_user.id)
    await message.answer("–í–æ—Ç —Ç–≤–æ—è —Å—Å—ã–ª–∫–∞\n" + link + '\n' +
                         "–ó–∞–ø–æ—Å—Ç–∏ –∫—É–¥–∞ —Ö–æ—á–µ—à—å. –¢–æ—Ç, –∫—Ç–æ –ø–µ—Ä–µ–π–¥–µ—Ç –ø–æ —Å—Å—ã–ª–∫–µ, —Å–º–æ–∂–µ—Ç "
                         "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—É—é –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É —Ç–µ–±–µ ‚ù§Ô∏è", reply_markup=kb.main_kb)
    if NOTIFICATION:  # –≠—Ç–æ –º–Ω–µ –ø—Ä–æ—Å—Ç–æ —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞—Å–∫–æ–ª—å–∫–æ –Ω–∞—Ä–æ–¥ –ø–æ–ª—å–∑—É–µ—Ç—Å—è –±–æ—Ç–æ–º
        await bot.send_message(1821744447, 'generated link')


@dp.message_handler(state='waiting text')
async def process_start_command(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        stacy_id = data['stacy_id']
        await bot.send_message(stacy_id, "–¢–µ–±–µ —á—Ç–æ-—Ç–æ –Ω–∞–ø–∏—Å–∞–ª–∏:\n" + message.text)
    await message.answer("–£—Ä–∞, –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É!")
    if NOTIFICATION:  # –≠—Ç–æ –º–Ω–µ –ø—Ä–æ—Å—Ç–æ —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞—Å–∫–æ–ª—å–∫–æ –Ω–∞—Ä–æ–¥ –ø–æ–ª—å–∑—É–µ—Ç—Å—è –±–æ—Ç–æ–º
        await bot.send_message(1821744447, '+1 user')
    await state.finish()


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)


